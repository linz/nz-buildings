name: Sqitch Checks

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  sqitch-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - {postgres: "10", postgis: "2.5"}
          - {postgres: "14", postgis: "3.2"}

    container: pgxn/pgxn-tools
          
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install Sqitch 
        run: |
          sudo apt-get install -y libdbd-pg-perl build-essential perl perl-doc
          sudo apt-get install -y cpanminus
          sudo cpanm --notest DWHEELER/App-Sqitch-v${{ env.SQITCH_VERSION }}.tar.gz
        env:
          SQITCH_VERSION: 1.2.1

      - name: Check Sqitch version
        run: sqitch --version
        
      - name: Install PostGIS 
        run: |
          sudo apt-get install \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }} \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }}-scripts

      - name: Database setup
        run: |
          pg-start ${{ matrix.postgres }}
          sudo -u postgres createuser -s user
          sudo -u postgres createdb --owner=user test_db
          psql -d ${{ env.TEST_DB }} -c 'CREATE EXTENSION postgis;'
          psql -d ${{ env.TEST_DB }} -c 'CREATE EXTENSION intarray;'
          psql -d ${{ env.TEST_DB }} -a -f create_test_admin_bdys_schema.sql
          psql -d ${{ env.TEST_DB }} -a -f db/admin_bdys.sql
          psql -d ${{ env.TEST_DB }} -a -f create_test_aerial_schema.sql
          psql -d ${{ env.TEST_DB }} -a -f db/aerial_lds.sql
        working-directory: ./db/tests/testdata
        env:
          TEST_DB: postgresql://user@127.0.0.1/test_db
          PGPASSWORD: password

      - name: Sqitch deploy
        run: sqitch deploy --verify db:postgresql://user@127.0.0.1/test_db
        working-directory: ./db/sql
        env:
          PGPASSWORD: password

      - name: Sqitch revert
        run: sqitch revert -y db:postgresql://user@127.0.0.1/test_db
        working-directory: ./db/sql
        env:
          PGPASSWORD: password
          
      - name: Sqitch deploy again
        run: sqitch deploy --verify db:postgresql://user@127.0.0.1/test_db
        working-directory: ./db/sql
        env:
          PGPASSWORD: password
          
      - name: Add test data
        run: |
          psql -d ${{ env.TEST_DB }} -a -f buildings_reference.sql
          psql -d ${{ env.TEST_DB }} -a -f buildings_common.sql
          psql -d ${{ env.TEST_DB }} -a -f buildings.sql
          psql -d ${{ env.TEST_DB }} -a -f buildings_bulk_load.sql
          psql -d ${{ env.TEST_DB }} -a -f buildings_lds.sql
          psql -d ${{ env.TEST_DB }} -a -f update_sequences.sql
          psql -d ${{ env.TEST_DB }} -c 'REFRESH MATERIALIZED VIEW buildings_reference.territorial_authority_grid;' 
        working-directory: ./db/tests/testdata/db
        env:
          TEST_DB: postgresql://user@127.0.0.1/test_db
          PGPASSWORD: password

      - name: Run pgTAP tests
        run: pg_prove -d postgresql://user@127.0.0.1/test_db db/tests/
        env:
          PGPASSWORD: password
